.global tests

.data 

m1: .asciz "\nТест 1 (a = 1, b = 2, start = 0, end = 4)\n"
m2: .asciz "\nТест 2 (a = -1, b = -2, start = 4, end = 3)\n"
m3: .asciz "\nТест 3 (a = 2, b = -2, start = -2, end = 2)\n"
m4: .asciz "\nТест 4 (a = 2, b = 3, start = 4, end = 5)\n"
m5: .asciz "\nТест 5 (a = 2.2, b = 1.2, start = -0.1, end = 0.2)\n"
test_1: .double 1,2,0,4
test_2: .double -1,-2,4,3
test_3: .double 2,-2,-2,2
test_4: .double 2,3,4,5
test_5: .double 2.2, 1.2, -0.1, 0.2

.text
tests:
test1:
	la	a0, m1		# Номер теста
      	li	a7, 4           # Системный вызов №4
      	ecall
      	
	lui t0, %hi(test_1)   	# Загрузка верхних 20 бит адреса массива
    	addi t0, t0, %lo(test_1)   # Загрузка нижних 12 бит адреса массива

    	# Сохранение чисел из массива в регистры
    	fld fs1, 0(t0)        # Загрузка первого числа в регистр fs1
    	fld fs2, 8(t0)        # Загрузка второго числа в регистр fs2
   	fld fs3, 16(t0)       # Загрузка третьего числа в регистр fs3
    	fld fs4, 24(t0)       # Загрузка четвертого числа в регистр fs4
    	
    	jal check_for_tests	#Нестрогая проверка данных
    	bne t1, zero, test2
    	
    	jal simpson_func  
    	
    	print_double_number(fa0)#Вывод результата
test2:    		
	la	a0, m2		# Номер теста
      	li	a7, 4           # Системный вызов №4
      	ecall
      	
	lui t0, %hi(test_2)   # Загрузка верхних 20 бит адреса массива
    	addi t0, t0, %lo(test_2)   # Загрузка нижних 12 бит адреса массива

    	# Сохранение чисел из массива в регистры
    	fld fs1, 0(t0)        # Загрузка первого числа в регистр fs1
    	fld fs2, 8(t0)        # Загрузка второго числа в регистр fs2
   	fld fs3, 16(t0)       # Загрузка третьего числа в регистр fs3
    	fld fs4, 24(t0)       # Загрузка четвертого числа в регистр fs4
    	
    	jal check_for_tests	#Нестрогая проверка данных
    	bne t1, zero, test3
    	
    	jal simpson_func  
    	
    	print_double_number(fa0)#Вывод результата

test3:
	la	a0, m3		# Номер теста
      	li	a7, 4           # Системный вызов №4
      	ecall
      	
	lui t0, %hi(test_3)   # Загрузка верхних 20 бит адреса массива
    	addi t0, t0, %lo(test_3)   # Загрузка нижних 12 бит адреса массива

    	# Сохранение чисел из массива в регистры
    	fld fs1, 0(t0)        # Загрузка первого числа в регистр fs1
    	fld fs2, 8(t0)        # Загрузка второго числа в регистр fs2
   	fld fs3, 16(t0)       # Загрузка третьего числа в регистр fs3
    	fld fs4, 24(t0)       # Загрузка четвертого числа в регистр fs4
    	
    	jal check_for_tests	#Нестрогая проверка данных
    	bne t1, zero, test4
    	
    	jal simpson_func  
    	
    	print_double_number(fa0)#Вывод результата
    	
test4:
	la	a0, m4		# Номер теста
      	li	a7, 4           # Системный вызов №4
      	ecall
      	
	lui t0, %hi(test_4)   # Загрузка верхних 20 бит адреса массива
    	addi t0, t0, %lo(test_4)   # Загрузка нижних 12 бит адреса массива

    	# Сохранение чисел из массива в регистры
    	fld fs1, 0(t0)        # Загрузка первого числа в регистр fs1
    	fld fs2, 8(t0)        # Загрузка второго числа в регистр fs2
   	fld fs3, 16(t0)       # Загрузка третьего числа в регистр fs3
    	fld fs4, 24(t0)       # Загрузка четвертого числа в регистр fs4
    	
    	jal check_for_tests	#Нестрогая проверка данных
    	bne t1, zero, test5
    	
    	jal simpson_func  
    	
    	print_double_number(fa0)#Вывод результата
test5:
	la	a0, m5		# Номер теста
      	li	a7, 4           # Системный вызов №4
      	ecall
      	
	lui t0, %hi(test_5)   # Загрузка верхних 20 бит адреса массива
    	addi t0, t0, %lo(test_5)   # Загрузка нижних 12 бит адреса массива

    	# Сохранение чисел из массива в регистры
    	fld fs1, 0(t0)        # Загрузка первого числа в регистр fs1
    	fld fs2, 8(t0)        # Загрузка второго числа в регистр fs2
   	fld fs3, 16(t0)       # Загрузка третьего числа в регистр fs3
    	fld fs4, 24(t0)       # Загрузка четвертого числа в регистр fs4
    	
    	jal check_for_tests	#Нестрогая проверка данных
    	bne t1, zero, end_testing
    	
    	jal simpson_func  
    	
    	print_double_number(fa0)#Вывод результата
    	
end_testing:
	li a7 10			#Завершение работы программы с кодом ноль
  	ecall
